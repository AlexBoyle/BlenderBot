#!/bin/bash

#vars
image=''
buildflag=1
help="echo -e \"${0##*/} [flags] -i {image} [start|stop|restart|build|isrunning]\" && exit 1"
#functions/aliases
function isRunning() {
	if [ "$(docker ps | grep $image)" != "" ];then
		isRunning=0
	else
		isRunning=1
	fi
}
function build() {
	docker build -t $image . && echo -e "\e[92m$image Built\033[0m"
}
function run() {
	isRunning
	if [ $isRunning -eq 1 ];then
		docker run -dti $image && \
		echo -e "\e[92m$image Started\033[0m"
	else
		echo -e "\e[91m$image is already running\033[0m"
	fi
}
function stop() {
	isRunning
	if [ $isRunning -eq 0 ];then
		docker kill $(docker ps | grep $image | sed -e 's/\s.*$//') && \
		echo -e "\e[92m$image stopped successfully\033[0m"
	else
		echo -e "\e[91m$image was not running\033[0m"
	fi
}
#main script
if [ $# -eq 0 ]; then
	eval $help
elif [ $# -gt 0 ]; then
	index=1
	while [ $index -le $# ];do
		temp=${!index}
		if [[ ${temp:0:1} == '-' ]];then
			case "$temp" in
				-b)
					buildflag=0;;
				-i)
					index=$(($index + 1))
					image=${!index};;
				-h)
					eval $help
			esac
		else
			command=$index
			break
		fi
		index=$(($index + 1))
	done
	if [ "${!command}" == '' ];then
		eval $help
	fi
	if [ "$image" == '' ];then
		eval $help
	fi
	isRunning
	if [ "${!command}" == 'start' ];then

		if [ $buildflag -eq 0 ];then
			build && run
		else
			run
		fi
		echo ""
			exit 0
	elif [ "${!command}" == 'stop' ];then
		stop
		exit
	elif [ "${!command}" == 'restart' ];then
		 if [ $buildflag -eq 0 ];then
			stop && build && run
		else
			stop && run
		fi
		exit 0
	elif [ "${!command}" == 'build' ];then
		build && exit 0
	elif [ "${!command}" == 'isrunning' ];then
		echo $isRunning && exit 0
	fi
fi
